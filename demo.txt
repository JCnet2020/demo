-- ----------------------------------------------SQL

USE DBPRUEBA;

CREATE TABLE PROVEEDORES(
COD_PROVEEDOR INT IDENTITY(1,1) NOT NULL,
PROVEEDOR VARCHAR(200) NULL,
DIRECCION VARCHAR(200) NULL,
TELEFONO VARCHAR(200) NULL
);
ALTER TABLE PROVEEDORES
	ADD CONSTRAINT PK_TABLE_1 PRIMARY KEY(COD_PROVEEDOR);
	
------------------------------------
create procedure sp_listar
as
begin
	select * from PROVEEDORES
end
------------------------------------
create procedure sp_listar_by_codigo
@codigo_proveedor int
as
begin
	select * from PROVEEDORES where COD_PROVEEDOR = @codigo_proveedor;
end
------------------------------------
create procedure sp_agregar
@proveedor varchar(200),
@direccion varchar(200),
@telefono varchar(200)
as
begin
	insert into PROVEEDORES values (@proveedor,@direccion,@telefono);
end
------------------------------------
create procedure sp_actualizar
@cod_proveedor int,
@proveedor varchar(200),
@direccion varchar(200),
@telefono varchar(200)
as
begin
	update PROVEEDORES
	set PROVEEDOR = @proveedor,
	    DIRECCION = @direccion,
		TELEFONO = @telefono
		where COD_PROVEEDOR = @cod_proveedor;
end
------------------------------------
create procedure sp_eliminar
@cod_proveedor int
as
begin
	delete from PROVEEDORES where COD_PROVEEDOR = @cod_proveedor;
end



-- ----------------------------------------------//WEB CONFIG
</system.web>
  <connectionStrings>
	<add name="SQL1" providerName="System.Data.SqlClient" connectionString="Persist Security Info=False;User ID=sa;Password=40341081;Initial Catalog=SistemaMatricula;Server=developer" />

	<add name="SQL2" providerName="System.Data.SqlClient" connectionString="Persist Security Info=False;Integrated 
Security=true;Initial Catalog=DBPRUEBA;Server=DEVELOPER\SQLEXPRESS" />
  </connectionStrings>


-- ----------------------------------------------Model -> Proveedor
  public class Proveedor
  {
      int COD_PROVEEDOR {  get; set; }
      string  PROVEEDOR { get; set; }
      string DIRECCION { get; set; }
      string TELEFONO {  get; set; }
  }

-- ---------------------------------------------//Model -> Data

using System.Configuration;

    public class Data
    {

        public string cadena() { 
            return ConfigurationManager.ConnectionStrings["SQL1"].ConnectionString;
        }
    }
}



-- ---------------------------------------------//Controller -> Proveedor

using WebApplication1.Models;


  //variables
 SqlConnection ocn;
 Data ObjConeccion;


 public JsonResult listar()
 {
     ObjConeccion = new Data();
     ocn = new SqlConnection(ObjConeccion.cadena());
     List<Proveedor> lista = new List<Proveedor>();

     try
     {
         SqlCommand cmd = new SqlCommand("sp_listar", ocn);
         cmd.CommandType = CommandType.StoredProcedure;
         ocn.Open();
         SqlDataReader dr = cmd.ExecuteReader();

         Proveedor obj = null;

         if (dr.HasRows)
         {
             while (dr.Read())
             {
                 obj = new Proveedor();

                 obj.COD_PROVEEDOR = dr.GetInt32(0);
                 obj.PROVEEDOR = dr.GetString(1);
                 obj.DIRECCION = dr.GetString(2);
                 obj.TELEFONO = dr.GetString(3);
                 lista.Add(obj);
             }
         }
         ocn.Close();
     }
     catch (Exception ex)
     {
         throw ex;
     }
     finally
     {
         ocn.Close();
     }

     return Json(lista, JsonRequestBehavior.AllowGet);
 }

 public JsonResult Buscar(string buscar)
 {
     ObjConeccion = new Data();
     ocn = new SqlConnection(ObjConeccion.cadena());
     List<Proveedor> lista = new List<Proveedor>();

     try
     {
         SqlCommand cmd = new SqlCommand("select * from PROVEEDORES where proveedor like '" + buscar + "%';", ocn);
         ocn.Open();
         SqlDataReader dr = cmd.ExecuteReader();

         Proveedor obj = null;

         if (dr.HasRows)
         {
             while (dr.Read())
             {
                 obj = new Proveedor();

                 obj.COD_PROVEEDOR = dr.GetInt32(0);
                 obj.PROVEEDOR = dr.GetString(1);
                 obj.DIRECCION = dr.GetString(2);
                 obj.TELEFONO = dr.GetString(3);
                 lista.Add(obj);
             }
         }
         ocn.Close();
     }
     catch (Exception ex)
     {
         throw ex;
     }
     finally
     {
         ocn.Close();
     }

     return Json(lista, JsonRequestBehavior.AllowGet);
 }




 public JsonResult listarByCodigo(int buscar)
 {
     ObjConeccion = new Data();
     ocn = new SqlConnection(ObjConeccion.cadena());
     List<Proveedor> lista = new List<Proveedor>();

     try
     {
         SqlCommand cmd = new SqlCommand("sp_listar_by_codigo", ocn);
         cmd.CommandType = CommandType.StoredProcedure;
         cmd.Parameters.Add("@codigo_proveedor", SqlDbType.Int);
         cmd.Parameters["@codigo_proveedor"].Value = buscar;
         ocn.Open();
         SqlDataReader dr = cmd.ExecuteReader();

         Proveedor obj = null;

         if (dr.HasRows)
         {
             while (dr.Read())
             {
                 obj = new Proveedor();

                 obj.COD_PROVEEDOR = dr.GetInt32(0);
                 obj.PROVEEDOR = dr.GetString(1);
                 obj.DIRECCION = dr.GetString(2);
                 obj.TELEFONO = dr.GetString(3);
                 lista.Add(obj);
             }
         }
         ocn.Close();
     }
     catch (Exception ex)
     {
         throw ex;
     }
     finally
     {
         ocn.Close();
     }

     return Json(lista, JsonRequestBehavior.AllowGet);
 }




 public int GuardarDatos(Proveedor objProveedor)
 {
     int registros = 0;
     ObjConeccion = new Data();
     ocn = new SqlConnection(ObjConeccion.cadena());

     try
     {

         if (objProveedor.COD_PROVEEDOR == 0)
         {
             //nuevo
             SqlCommand cmd = new SqlCommand("sp_agregar", ocn);
             cmd.CommandType = CommandType.StoredProcedure;

             cmd.Parameters.Add("@proveedor", SqlDbType.VarChar, 200);
             cmd.Parameters["@proveedor"].Value = objProveedor.PROVEEDOR;

             cmd.Parameters.Add("@direccion", SqlDbType.VarChar,200);
             cmd.Parameters["@direccion"].Value = objProveedor.DIRECCION;

             cmd.Parameters.Add("@telefono", SqlDbType.VarChar, 200);
             cmd.Parameters["@telefono"].Value = objProveedor.TELEFONO;


             ocn.Open();
             registros = (int)cmd.ExecuteNonQuery();
             ocn.Close();
         }
         else
         {
             //modificar
             SqlCommand cmd = new SqlCommand("sp_actualizar", ocn);
             cmd.CommandType = CommandType.StoredProcedure;

             cmd.Parameters.Add("@cod_proveedor", SqlDbType.Int);
             cmd.Parameters["@cod_proveedor"].Value = objProveedor.COD_PROVEEDOR;

             cmd.Parameters.Add("@proveedor", SqlDbType.VarChar, 200);
             cmd.Parameters["@proveedor"].Value = objProveedor.PROVEEDOR;

             cmd.Parameters.Add("@direccion", SqlDbType.VarChar, 200);
             cmd.Parameters["@direccion"].Value = objProveedor.DIRECCION;

             cmd.Parameters.Add("@telefono", SqlDbType.VarChar, 200);
             cmd.Parameters["@telefono"].Value = objProveedor.TELEFONO;


             ocn.Open();
             registros = cmd.ExecuteNonQuery();
             ocn.Close();
         }

     }
     catch (Exception ex)
     {
         registros = 0;
         throw ex;
     }

     return registros;
 }


 public int EliminarDatos(Proveedor objProveedor)
 {
     int registros = 0;
     ObjConeccion = new Data();
     ocn = new SqlConnection(ObjConeccion.cadena());

     try
     {
         SqlCommand cmd = new SqlCommand("sp_eliminar", ocn);
         cmd.CommandType = CommandType.StoredProcedure;

         cmd.Parameters.Add("@cod_proveedor", SqlDbType.Int);
         cmd.Parameters["@cod_proveedor"].Value = objProveedor.COD_PROVEEDOR;

         ocn.Open();
         registros = cmd.ExecuteNonQuery();
         ocn.Close();
     }
     catch (Exception ex)
     {
         registros = 0;
         throw ex;
     }

     return registros;
 }



-- ----------------------------------------------------------- Layout
 <!--@Styles.Render("~/Content/css")-->
 <!--@Scripts.Render("~/bundles/modernizr")-->
 <!--<link href="~/Content/Site.css" rel="stylesheet" />-->
 
 <link href="~/Content/bootstrap.css" rel="stylesheet" />
 <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

....
..
.

 <!--@Scripts.Render("~/bundles/jquery")-->
 <!--@Scripts.Render("~/bundles/bootstrap")-->
 @*<script src="~/Scripts/jquery-3.4.1.js"></script>*@
 <script src="~/Scripts/bootstrap.js"></script>
 @RenderSection("scripts", required: false)










-- --------------------------------------------------------------//INDEX
agregae --> ~/Content/JC/datatables.css
			~/Content/JC/myEstilo.css
			
			~/Scripts/jquery-3.4.1.min.js
			~/Scripts/JC/Proveedores.js
			~/Scripts/jc/datatables.min.js


@{
    ViewBag.Title = "Index";
}


<link href="~/Content/JC/datatables.css" rel="stylesheet" />
<link href="~/Content/JC/myEstilo.css" rel="stylesheet" />

<main>

    <h2>Index Proveedor</h2>

    <div class="row">
        <label for="txtBuscar" class="col-sm-2 col-form-label">Ingresar Proveedor : </label>
        <div class="col-sm-4">
            <input type="text" id="txtBuscar" placeholder="Ingresar busqueda" class="form-control" />
        </div>
        <div class="col-sm-6">
            <input type="button" id="btnBuscar" value="Buscar" class="btn btn-success" />
            <input type="button" id="btnLimpiar" value="Limpiar" class="btn btn-primary" />
            <button type="button" id="btnAgregar" onclick="abrirModal(0)" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#staticBackdrop"><i class="bi bi-file-earmark-plus"></i> Agregar</button>
        </div>
    </div>

    <div>
        &nbsp;
    </div>

    <div id="Tabla">

    </div>


    <!-- Modal -->
    <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">
                        <label id="lblTitulo">nulll</label>
                    </h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row mt-3">
                        <div class="col-3">
                            Codigo :
                        </div>
                        <div class="col-6">
                            <input id="txtCodigo" type="text" class="form-control borrar " readonly placeholder="Automatico" />
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-3">
                            Proveedor :
                        </div>
                        <div class="col-6">
                            <input id="txtProveedor" type="text" class="form-control borrar obligatorio" placeholder="Ingresar Proveedor" />
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-3">
                            Direccion :
                        </div>
                        <div class="col-6">
                            <input id="txtDireccion" type="text" class="form-control borrar obligatorio" placeholder="Descripcion" />
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-3">
                            Telefono :
                        </div>
                        <div class="col-6">
                            <input id="txtTelefono" type="text" class="form-control borrar obligatorio" placeholder="Descripcion" />
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button id="btnSalir" type="button" class="btn btn-secondary" data-bs-dismiss="modal"> <i class="bi bi-x-circle"></i> Salir</button>
                        <button id=" btnGuardar" type="button" onclick="Agregar()" class="btn btn-primary"> <i class="bi bi-save"></i> Guardar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</main>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/JC/Proveedores.js"></script>
<script src="~/Scripts/jc/datatables.min.js"></script>





-- ---------------------------------------------------------------------- proveedores.js
					<script src="~/Scripts/JC/Proveedores.js"></script>

//FUNCIONES
function Listar() {
    $.get("Home/listar", function (data) {
        crearLista(["COD_PROVEEDOR", "PROVEEDOR", "DIRECCION", "TELEFONO", "OPERACIONES"], data, "Tabla");
    });
}

function crearLista(arrayColumnas, data, Control) {
    var contenido = '';


    contenido += "<table id='Tablita' class='table table-hover'>";
    contenido += "<thead class='table-dark'>";
    contenido += "<tr>"
    for (var i = 0; i < arrayColumnas.length; i++) {
        contenido += "<td>" + arrayColumnas[i] + "</td>"
    }
    contenido += "</tr>"
    contenido += "</thead>";

    contenido += "<body>";

    var nfilas = data.length;
   

    if (nfilas != 0) { 
        var llaves = Object.keys(data[0]);
        var valorLlaves;

    for (var i = 0; i < nfilas; i++) {
        contenido += "<tr>";
        for (var j = 0; j < llaves.length; j++) {
            valorLlaves = llaves[j];
            contenido += "<td>" + data[i][valorLlaves] + "</td>";
        }
        var llaveCodigo = llaves[0];
        contenido += "<td> <button id='btnEditar' class='btn btn-primary' onClick='abrirModal(" + data[i][llaveCodigo] + ")' data-bs-toggle='modal' data-bs-target='#staticBackdrop'><i class='bi bi-pencil-square'></i></button>  &nbsp;&nbsp; <button id='btnEliminar' class='btn btn-danger'  onClick='Eliminar(" + data[i][llaveCodigo] + ")'><i class='bi bi-trash'></i></button> </td>";
        contenido += "</tr>";
        }
    }
    contenido += "</body>";
    contenido += "</table>";

    document.getElementById(Control).innerHTML = contenido;

    $("#Tablita").dataTable({
        searching: false
    });
}

function abrirModal(valor) {

    //PARA LIMPIAR ERRORES
    var controles = document.getElementsByClassName("obligatorio");
    for (var i = 0; i < controles.length; i++) {
            controles[i].classList.remove("error");
        }

    if (valor == 0) {
        //NUEVO
        document.getElementById("lblTitulo").innerHTML = "<i class='bi bi - file - earmark - plus'></i> Nuevo Proveedor";
        borrarDatos();
    }
    else {
        //MODIFICAR
        document.getElementById("lblTitulo").innerHTML = "<i class='bi bi - pencil - fill'></i> Editar Proveedor";
        $.get("Home/listarByCodigo/?buscar=" + valor, function (data) {

            document.getElementById("txtCodigo").value = data[0].COD_PROVEEDOR;
            document.getElementById("txtProveedor").value = data[0].PROVEEDOR;
            document.getElementById("txtDireccion").value = data[0].DIRECCION;
            document.getElementById("txtTelefono").value = data[0].TELEFONO;
        });
    }
}

function borrarDatos() {
    var controles = document.getElementsByClassName("borrar");
    //console.log(controles);
    for (var i = 0; i < controles.length; i++) {
        controles[i].value = "";
    }
}

function datosObligatorio() {
    var exito = true;
    var controles = document.getElementsByClassName("obligatorio");

    for (var i = 0; i < controles.length; i++) {
        if (controles[i].value == "") {
            exito = false;
            controles[i].classList.add('error');
        } else {
            exito = true;
            controles[i].classList.remove("error");
        }
    }
    return exito;
}

function Agregar() {
    if (datosObligatorio()) {
        //GRABA
        var frm = new FormData();
        var codigo = document.getElementById("txtCodigo").value;
        var proveedor = document.getElementById("txtProveedor").value;
        var direccion = document.getElementById("txtDireccion").value;
        var telefono = document.getElementById("txtTelefono").value;

        frm.append("COD_PROVEEDOR", codigo);
        frm.append("PROVEEDOR", proveedor);
        frm.append("DIRECCION", direccion);
        frm.append("TELEFONO", telefono);

        if (confirm("¿Desea Guardar?") == 1) {
            $.ajax({
                type: "POST",
                url: "Home/GuardarDatos",
                data: frm,
                contentType: false,
                processData: false,
                success: function (data) {
                    if (data != 0) {
                        Listar();
                        alert("REGISTRADO");
                        document.getElementById("btnSalir").click();
                    } else {
                        alert("ERRORRRRRRRRRRR");
                    }
                }
            });
        }

        

    } else {
        //NO GRABA
    }
}


function Eliminar(valor) {

    var frm = new FormData();
    frm.append("COD_PROVEEDOR", valor);

    if (confirm("¿Desea eliminar Codigo: "+ valor +"?") == 1) {
        $.ajax({
            type: "POST",
            url: "Home/EliminarDatos",
            data: frm,
            contentType: false,
            processData: false,
            success: function (data) {
                if (data > 0) {
                    alert("ELIMINADO");
                    Listar();
                    document.getElementById("btnSalir").click();
                } else {
                    alert("ERRORRRRRRRRRRR");
                }
            }
        });
    }
}



//frm
Listar();


//EVENTOS
var btnBuscar = document.getElementById("btnBuscar");
btnBuscar.onclick = function () {
    var buscar = document.getElementById("txtBuscar").value;

    $.get("Home/Buscar/?buscar=" + buscar, function (data) {
        crearLista(["COD_PROVEEDOR", "PROVEEDOR", "DIRECCION", "TELEFONO", "OPERACIONES"], data, "Tabla");
    });
}

var btnLimpiar = document.getElementById("btnLimpiar");
btnLimpiar.onclick = function () {
        $.get("Home/listar", function (data) {
            crearLista(["COD_PROVEEDOR", "PROVEEDOR", "DIRECCION", "TELEFONO", "OPERACIONES"], data, "Tabla");
        });

        document.getElementById("txtBuscar").value = '';
}



------
go
CREATE PROCEDURE ALUMNO_ELIMINAR
	@codigo int
AS
BEGIN
 update Alumno set
	BHABILITADO =0
 where iidalumno = @codigo;
END

go
create function CantidadAlumnos(@codigo int) 
returns varchar(200)
as
begin
 declare @nombre varchar(200)
 set @nombre = (select nombre from Alumno where [IIDALUMNO] = @codigo);

 return @nombre;
end